import { useState } from "react";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Calendar, User, Phone, Mail, DollarSign, CheckCircle2 } from "lucide-react";

interface BookingModalProps {
  isOpen: boolean;
  onClose: () => void;
  onConfirm: () => void;
  subletInfo: {
    title: string;
    price: number;
    location: string;
    duration: string;
  };
}

export function BookingModal({ isOpen, onClose, onConfirm, subletInfo }: BookingModalProps) {
  const [depositAmount] = useState(subletInfo.price);

  const formatCurrency = (value: number) => {
    if (value >= 1_000_000) {
      return `${(value / 1_000_000).toFixed(1)}tr`;
    }
    return `${Math.round(value / 1_000)}k`;
  };

  const handleConfirm = () => {
    onConfirm();
    onClose();
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-lg max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle>ƒê·∫∑t ch·ªó cho ph√≤ng</DialogTitle>
          <DialogDescription>
            ƒêi·ªÅn th√¥ng tin ƒë·ªÉ x√°c nh·∫≠n ƒë·∫∑t ch·ªó. Ch·ªß nh√† s·∫Ω li√™n h·ªá l·∫°i v·ªõi b·∫°n trong v√≤ng 24 gi·ªù.
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-5 py-4">
          {/* Room Info Summary */}
          <div className="bg-gradient-to-br from-primary/5 to-secondary/5 rounded-2xl p-5 border border-primary/10">
            <h4 className="mb-2">{subletInfo.title}</h4>
            <div className="space-y-1 text-sm text-gray-600">
              <p>üìç {subletInfo.location}</p>
              <p>üìÖ {subletInfo.duration}</p>
              <div className="flex items-center gap-2 pt-2">
                <DollarSign className="w-4 h-4 text-primary" />
                <span className="text-lg text-primary font-medium">
                  {formatCurrency(subletInfo.price)}/th√°ng
                </span>
              </div>
            </div>
          </div>

          {/* Contact Information */}
          <div className="space-y-4">
            <h4 className="text-sm font-medium">Th√¥ng tin li√™n h·ªá</h4>
            
            <div className="space-y-2">
              <Label htmlFor="fullname" className="flex items-center gap-2">
                <User className="w-4 h-4 text-primary" />
                H·ªç v√† t√™n
              </Label>
              <Input
                id="fullname"
                placeholder="Nguy·ªÖn VƒÉn A"
                className="rounded-xl"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="phone" className="flex items-center gap-2">
                <Phone className="w-4 h-4 text-primary" />
                S·ªë ƒëi·ªán tho·∫°i
              </Label>
              <Input
                id="phone"
                type="tel"
                placeholder="0912345678"
                className="rounded-xl"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="email" className="flex items-center gap-2">
                <Mail className="w-4 h-4 text-primary" />
                Email
              </Label>
              <Input
                id="email"
                type="email"
                placeholder="example@email.com"
                className="rounded-xl"
              />
            </div>
          </div>

          {/* Move-in Date */}
          <div className="grid grid-cols-2 gap-4">
            <div className="space-y-2">
              <Label htmlFor="move-in-date" className="flex items-center gap-2">
                <Calendar className="w-4 h-4 text-primary" />
                Ng√†y d·ª± ki·∫øn chuy·ªÉn v√†o
              </Label>
              <Input
                id="move-in-date"
                type="date"
                className="rounded-xl"
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="move-out-date">Ng√†y d·ª± ki·∫øn chuy·ªÉn ƒëi</Label>
              <Input
                id="move-out-date"
                type="date"
                className="rounded-xl"
              />
            </div>
          </div>

          {/* Additional Message */}
          <div className="space-y-2">
            <Label htmlFor="message">L·ªùi nh·∫Øn cho ch·ªß nh√† (t√πy ch·ªçn)</Label>
            <Textarea
              id="message"
              placeholder="Gi·ªõi thi·ªáu b·∫£n th√¢n, l√Ω do thu√™ ph√≤ng, c√¢u h·ªèi th√™m..."
              className="rounded-xl min-h-24"
            />
          </div>

          {/* Deposit Information */}
          <div className="bg-amber-50 border border-amber-200 rounded-xl p-4">
            <div className="flex items-start gap-3">
              <div className="w-8 h-8 bg-amber-100 rounded-full flex items-center justify-center shrink-0">
                üí∞
              </div>
              <div className="flex-1 space-y-1">
                <p className="text-sm font-medium">ƒê·∫∑t c·ªçc</p>
                <p className="text-xs text-gray-600">
                  Ti·ªÅn c·ªçc th∆∞·ªùng b·∫±ng 1 th√°ng ti·ªÅn thu√™ ({formatCurrency(depositAmount)}) v√† s·∫Ω ƒë∆∞·ª£c 
                  ho√†n tr·∫£ khi k·∫øt th√∫c h·ª£p ƒë·ªìng.
                </p>
              </div>
            </div>
          </div>

          {/* Booking Steps */}
          <div className="bg-gradient-to-br from-secondary/5 to-primary/5 rounded-xl p-4 space-y-3">
            <p className="text-sm font-medium mb-2">Quy tr√¨nh ƒë·∫∑t ch·ªó:</p>
            <div className="space-y-2">
              <div className="flex items-start gap-2 text-xs">
                <CheckCircle2 className="w-4 h-4 text-secondary shrink-0 mt-0.5" />
                <span>B∆∞·ªõc 1: ƒêi·ªÅn th√¥ng tin v√† g·ª≠i y√™u c·∫ßu ƒë·∫∑t ch·ªó</span>
              </div>
              <div className="flex items-start gap-2 text-xs">
                <CheckCircle2 className="w-4 h-4 text-secondary shrink-0 mt-0.5" />
                <span>B∆∞·ªõc 2: Ch·ªß nh√† xem x√©t v√† li√™n h·ªá l·∫°i trong 24h</span>
              </div>
              <div className="flex items-start gap-2 text-xs">
                <CheckCircle2 className="w-4 h-4 text-secondary shrink-0 mt-0.5" />
                <span>B∆∞·ªõc 3: H·∫πn xem ph√≤ng tr·ª±c ti·∫øp v√† k√Ω h·ª£p ƒë·ªìng</span>
              </div>
              <div className="flex items-start gap-2 text-xs">
                <CheckCircle2 className="w-4 h-4 text-secondary shrink-0 mt-0.5" />
                <span>B∆∞·ªõc 4: Thanh to√°n ti·ªÅn c·ªçc v√† nh·∫≠n ch√¨a kh√≥a</span>
              </div>
            </div>
          </div>

          {/* Safety Notice */}
          <div className="bg-yellow-50 border border-yellow-200 rounded-xl p-4">
            <p className="text-xs text-gray-700">
              ‚ö†Ô∏è <strong>L∆∞u √Ω an to√†n:</strong> Lu√¥n xem ph√≤ng tr·ª±c ti·∫øp v√† ki·ªÉm tra gi·∫•y t·ªù 
              ch·ªß nh√† tr∆∞·ªõc khi thanh to√°n b·∫•t k·ª≥ kho·∫£n ti·ªÅn n√†o.
            </p>
          </div>

          {/* Action Buttons */}
          <div className="flex gap-3 pt-2">
            <Button
              onClick={onClose}
              variant="outline"
              className="flex-1 rounded-full h-12"
            >
              H·ªßy
            </Button>
            <Button
              onClick={handleConfirm}
              className="flex-1 bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90 rounded-full h-12 text-white"
            >
              <Calendar className="w-5 h-5 mr-2" />
              X√°c nh·∫≠n ƒë·∫∑t ch·ªó
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}

