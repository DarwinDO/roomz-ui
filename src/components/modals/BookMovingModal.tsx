import { useState } from "react";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { MapPin, Calendar, DollarSign, Truck } from "lucide-react";

interface BookMovingModalProps {
  isOpen: boolean;
  onClose: () => void;
  onConfirm: () => void;
}

export function BookMovingModal({ isOpen, onClose, onConfirm }: BookMovingModalProps) {
  const [estimatedPrice] = useState(3_500_000);
  const discountRate = 0.15;

  const formatCurrency = (value: number) => `${value.toLocaleString("vi-VN")}‚Ç´`;

  const handleConfirm = () => {
    onConfirm();
    onClose();
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-lg">
        <DialogHeader>
          <DialogTitle>ƒê·∫∑t d·ªãch v·ª• chuy·ªÉn ph√≤ng</DialogTitle>
          <DialogDescription>
            ƒê·ªôi ng≈© chuy·ªÉn nh√† chuy√™n nghi·ªáp h·ªó tr·ª£ b·∫°n d·ªçn ph√≤ng an to√†n, nhanh ch√≥ng
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-5 py-4">
          {/* Pickup Address */}
          <div className="space-y-2">
            <Label htmlFor="pickup-address" className="flex items-center gap-2">
              <MapPin className="w-4 h-4 text-primary" />
              ƒê·ªãa ch·ªâ l·∫•y ƒë·ªì
            </Label>
            <Input
              id="pickup-address"
              placeholder="V√≠ d·ª•: 123 Nguy·ªÖn Th·ªã Minh Khai, Qu·∫≠n 1"
              className="rounded-xl"
            />
          </div>

          {/* Destination Address */}
          <div className="space-y-2">
            <Label htmlFor="destination-address" className="flex items-center gap-2">
              <MapPin className="w-4 h-4 text-secondary" />
              ƒê·ªãa ch·ªâ ƒë·∫øn
            </Label>
            <Input
              id="destination-address"
              placeholder="V√≠ d·ª•: 45 Phan X√≠ch Long, Ph√∫ Nhu·∫≠n"
              className="rounded-xl"
            />
          </div>

          {/* Date & Time */}
          <div className="grid grid-cols-2 gap-4">
            <div className="space-y-2">
              <Label htmlFor="move-date" className="flex items-center gap-2">
                <Calendar className="w-4 h-4 text-primary" />
                Ng√†y chuy·ªÉn
              </Label>
              <Input
                id="move-date"
                type="date"
                className="rounded-xl"
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="move-time">Gi·ªù chuy·ªÉn</Label>
              <Input
                id="move-time"
                type="time"
                className="rounded-xl"
              />
            </div>
          </div>

          {/* Estimated Price */}
          <div className="bg-gradient-to-br from-primary/5 to-secondary/5 rounded-2xl p-5 border border-primary/10">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600 mb-1">Chi ph√≠ ∆∞·ªõc t√≠nh</p>
                <div className="flex items-center gap-2">
                  <Truck className="w-5 h-5 text-primary" />
                  <span className="text-sm text-gray-600">G√≥i chuy·ªÉn ph√≤ng ti√™u chu·∫©n (2 nh√¢n s·ª±)</span>
                </div>
              </div>
              <div className="text-right">
                <div className="flex items-center gap-1">
                  <DollarSign className="w-5 h-5 text-primary" />
                  <span className="text-2xl text-primary">{formatCurrency(estimatedPrice)}</span>
                </div>
                <p className="text-xs text-gray-500">Gi√° g·ªëc tham kh·∫£o</p>
              </div>
            </div>
          </div>

          {/* Discount Badge */}
          <div className="bg-amber-50 border border-amber-200 rounded-xl p-3 flex items-center gap-3">
            <div className="w-8 h-8 bg-amber-100 rounded-full flex items-center justify-center shrink-0">
              üéì
            </div>
            <div className="flex-1">
              <p className="text-sm">ƒê√£ √°p d·ª•ng ∆∞u ƒë√£i sinh vi√™n</p>
              <p className="text-xs text-gray-600">Gi·∫£m 15% cho ƒë∆°n ƒë·∫∑t d·ªãch v·ª•</p>
            </div>
            <span className="text-amber-700">-{formatCurrency(Math.round(estimatedPrice * discountRate))}</span>
          </div>

          {/* Final Price */}
          <div className="pt-2 border-t border-border">
            <div className="flex items-center justify-between">
              <span className="text-sm text-gray-600">T·ªïng thanh to√°n</span>
              <span className="text-xl text-primary">{formatCurrency(Math.round(estimatedPrice * (1 - discountRate)))}</span>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex gap-3 pt-2">
            <Button
              onClick={onClose}
              variant="outline"
              className="flex-1 rounded-full h-12"
            >
              H·ªßy
            </Button>
            <Button
              onClick={handleConfirm}
              className="flex-1 bg-primary hover:bg-primary/90 rounded-full h-12"
            >
              X√°c nh·∫≠n ƒë·∫∑t d·ªãch v·ª•
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}
